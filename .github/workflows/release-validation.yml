name: ASPICE Release PR Validation

on:
  pull_request:
    branches: 
      - 'releases/**'

jobs:
  check-source-branch:
    name: Check Source Branch
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'dev/')
    steps:
      - name: Source Branch Check
        run: |
          echo "Source branch: ${{ github.head_ref }}"
          echo "Target branch: ${{ github.base_ref }}"
          echo "This workflow only runs for PRs from dev/* branches to release/* branches"

  release-validation:
    name: Release Validation
    runs-on: ubuntu-latest
    needs: check-source-branch
    container:
      image: golang:1.21-bullseye
      options: --user root
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Dependencies
        run: |
          apt-get update
          apt-get install -y bc make jq
          go install golang.org/x/tools/cmd/cover@latest
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          
      - name: Test with coverage
        run: make test-coverage
        
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: release-coverage
          path: |
            ./coverage.txt
            
      - name: Verify Test Coverage
        run: |
          # Extract coverage percentage
          COVERAGE=$(go tool cover -func=coverage.txt | grep total | awk '{print $3}' | tr -d '%')
          echo "Test coverage: $COVERAGE%"
          
          # Fail if coverage is below threshold (e.g., 80%)
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Error: Test coverage is below the required threshold of 80%"
            exit 1
          fi